{"ast":null,"code":"var _jsxFileName = \"/home/ishita/weather_app_react/src/Components/Temperature.js\";\nimport React, { useEffect, useState } from \"react\";\n\nfunction Temperature(props) {\n  const [temperature, setTemperature] = useState(null); // const [tempType, setTempType] = useState(\"celcius\");\n\n  useEffect(() => {\n    setTemperature(props.temperature);\n  }, [props]);\n\n  const celciusToFahrenheitAndBack = () => {\n    if (props.tempU === \"celcius\") {\n      setTempType(\"fahrenheit\");\n      setTemperature(temperature * 9 / 5 + 32);\n    } else {\n      setTempType(\"celcius\");\n      setTemperature(temperature);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    onClick: celciusToFahrenheitAndBack,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, \"the temperature is :\", temperature);\n}\n\nexport default Temperature;","map":{"version":3,"sources":["/home/ishita/weather_app_react/src/Components/Temperature.js"],"names":["React","useEffect","useState","Temperature","props","temperature","setTemperature","celciusToFahrenheitAndBack","tempU","setTempType"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAC1B,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCJ,QAAQ,CAAC,IAAD,CAA9C,CAD0B,CAE1B;;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,cAAc,CAACF,KAAK,CAACC,WAAP,CAAd;AACD,GAFQ,EAEN,CAACD,KAAD,CAFM,CAAT;;AAIA,QAAMG,0BAA0B,GAAG,MAAM;AACvC,QAAIH,KAAK,CAACI,KAAN,KAAgB,SAApB,EAA+B;AAC7BC,MAAAA,WAAW,CAAC,YAAD,CAAX;AACAH,MAAAA,cAAc,CAAED,WAAW,GAAG,CAAd,GAAgB,CAAjB,GAAsB,EAAvB,CAAd;AACD,KAHD,MAGO;AACLI,MAAAA,WAAW,CAAC,SAAD,CAAX;AACAH,MAAAA,cAAc,CAACD,WAAD,CAAd;AACD;AACF,GARD;;AAWA,sBACE;AAAK,IAAA,OAAO,EAAEE,0BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BACuBF,WADvB,CADF;AAKD;;AAED,eAAeF,WAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nfunction Temperature(props) {\n  const [temperature, setTemperature] = useState(null);\n  // const [tempType, setTempType] = useState(\"celcius\");\n\n  useEffect(() => {\n    setTemperature(props.temperature);\n  }, [props]);\n\n  const celciusToFahrenheitAndBack = () => {\n    if (props.tempU === \"celcius\") {\n      setTempType(\"fahrenheit\");\n      setTemperature((temperature * 9/5) + 32);\n    } else {\n      setTempType(\"celcius\");\n      setTemperature(temperature);\n    }\n  };\n  \n\n  return (\n    <div onClick={celciusToFahrenheitAndBack}>\n      the temperature is :{temperature}\n    </div>\n  );\n}\n\nexport default Temperature;\n"]},"metadata":{},"sourceType":"module"}
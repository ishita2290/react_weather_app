{"ast":null,"code":"var _jsxFileName = \"/home/ishita/weather_app_react/src/App.js\";\nimport React, { useState } from \"react\";\nimport styles from \"./App.module.css\";\nimport Title from \"./Components/Title\";\nimport LocationForm from \"./Components/LocationForm\";\nimport Location from \"./Components/Location\";\nimport Humidity from \"./Components/Humidity\";\nimport Temperature from \"./Components/Temperature\";\nimport Date_Time from \"./Components/Date_Time\";\nimport Dates from \"./Components/Dates\";\nimport Time from \"./Components/Time\";\nimport Error from \"./Components/Error\";\nimport { getOpenWeatherMapForecast } from \"./services/openWeatherMap\";\nimport Description from \"./Components/Description\";\n\nfunction App() {\n  const [weatherForcast, setWeatherForcast] = useState({\n    city: \"\",\n    country: \"\",\n    date_time: \"\",\n    temperature: \"\",\n    temp_min: \"\",\n    temp_max: \"\",\n    feels_like: \"\",\n    dateNextDay1: \"\",\n    dateNextDay2: \"\",\n    dateNextDay3: \"\",\n    dateNextDay4: \"\",\n    humidity: \"\",\n    description: \"\",\n    error: \"\"\n  });\n  const [city, setCity] = useState(\"\");\n  const [country, setCountry] = useState(\"\");\n\n  const handleCityChange = event => {\n    // console.log(event.target.value);\n    setCity(event.target.value);\n  };\n\n  const handleCountryChange = event => {\n    // console.log(event.target.value);\n    setCountry(event.target.value);\n  };\n\n  const [tempForcastNext4Days, setTemp4Days] = useState([]);\n  const [fourDays, setfourDays] = useState([]);\n\n  const getWeather = e => {\n    e.preventDefault();\n    const kelvin = 273;\n\n    if (city && country) {\n      getOpenWeatherMapForecast(city, country).then(response => response.json()).then(result => {\n        console.log(result);\n        setWeatherForcast({\n          city: result.city.name,\n          country: result.city.country,\n          date_time: result.list[0].dt_txt,\n          temperature: Math.floor(result.list[0].main.temp - kelvin),\n          temp_min: Math.floor(result.list[0].main.temp_min - kelvin),\n          temp_max: Math.floor(result.list[0].main.temp_max - kelvin),\n          feels_like: Math.floor(result.list[0].main.feels_like - kelvin),\n          humidity: result.list[0].main.humidity,\n          description: result.list[0].weather[0].description,\n          error: \"\"\n        });\n        setTemp4Days([result.list[1].main.temp - kelvin, result.list[2].main.temp - kelvin, result.list[3].main.temp - kelvin, result.list[4].main.temp - kelvin]);\n        setfourDays([result.list[1].dt_txt, result.list[2].dt_txt, result.list[3].dt_txt, result.list[4].dt_txt]);\n      });\n    } else {\n      setWeatherForcast({\n        city: \"\",\n        country: \"\",\n        date_time: \"\",\n        temperature: \"\",\n        temp_min: \"\",\n        temp_max: \"\",\n        feels_like: \"\",\n        humidity: \"\",\n        description: \"\",\n        error: \"Please enter city and country\"\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.app,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: weatherForcast.temperature > 18 ? styles.warm : styles.cold,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: styles.date_Time,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Dates, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Time, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.locationForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(LocationForm, {\n    handleCityChange: handleCityChange,\n    handleCountryChange: handleCountryChange,\n    getWeather: getWeather,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"main\", {\n    className: styles.main,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Error, {\n    error: weatherForcast.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.location_date,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Location, {\n    city: weatherForcast.city,\n    country: weatherForcast.country,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.temperature,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Temperature, {\n    temperature: weatherForcast.temperature,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.feels_like,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Temperature, {\n    temp_desc: \"feels like\",\n    temperature: weatherForcast.feels_like,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.max_min,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.max,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Temperature, {\n    temp_desc: \"Max-temp\",\n    temperature: weatherForcast.temp_max,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Temperature, {\n    temp_desc: \"Min-temp\",\n    temperature: weatherForcast.temp_min,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.humidity,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Humidity, {\n    humidity: weatherForcast.humidity,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Description, {\n    desc: weatherForcast.description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.temp4Days,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 11\n    }\n  }, tempForcastNext4Days.map((temp, index) => /*#__PURE__*/React.createElement(Temperature, {\n    key: index,\n    temp_desc: four,\n    temperature: Math.floor(temp),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 15\n    }\n  }))))));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/ishita/weather_app_react/src/App.js"],"names":["React","useState","styles","Title","LocationForm","Location","Humidity","Temperature","Date_Time","Dates","Time","Error","getOpenWeatherMapForecast","Description","App","weatherForcast","setWeatherForcast","city","country","date_time","temperature","temp_min","temp_max","feels_like","dateNextDay1","dateNextDay2","dateNextDay3","dateNextDay4","humidity","description","error","setCity","setCountry","handleCityChange","event","target","value","handleCountryChange","tempForcastNext4Days","setTemp4Days","fourDays","setfourDays","getWeather","e","preventDefault","kelvin","then","response","json","result","console","log","name","list","dt_txt","Math","floor","main","temp","weather","app","title","warm","cold","date_Time","locationForm","location_date","max_min","max","temp4Days","map","index","four"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport styles from \"./App.module.css\";\nimport Title from \"./Components/Title\";\nimport LocationForm from \"./Components/LocationForm\";\nimport Location from \"./Components/Location\";\nimport Humidity from \"./Components/Humidity\";\n\nimport Temperature from \"./Components/Temperature\";\nimport Date_Time from \"./Components/Date_Time\";\nimport Dates from \"./Components/Dates\";\nimport Time from \"./Components/Time\";\nimport Error from \"./Components/Error\";\nimport { getOpenWeatherMapForecast } from \"./services/openWeatherMap\";\nimport Description from \"./Components/Description\";\n\nfunction App() {\n  const [weatherForcast, setWeatherForcast] = useState({\n    city: \"\",\n    country: \"\",\n    date_time: \"\",\n    temperature: \"\",\n    temp_min: \"\",\n    temp_max: \"\",\n    feels_like: \"\",\n    dateNextDay1: \"\",\n    dateNextDay2: \"\",\n    dateNextDay3: \"\",\n    dateNextDay4: \"\",\n    humidity: \"\",\n    description: \"\",\n    error: \"\",\n  });\n  const [city, setCity] = useState(\"\");\n  const [country, setCountry] = useState(\"\");\n\n  const handleCityChange = (event) => {\n    // console.log(event.target.value);\n    setCity(event.target.value);\n  };\n  const handleCountryChange = (event) => {\n    // console.log(event.target.value);\n    setCountry(event.target.value);\n  };\n  const [tempForcastNext4Days, setTemp4Days] = useState([]);\n  const [fourDays, setfourDays] = useState([]);\n  const getWeather = (e) => {\n    e.preventDefault();\n\n    \n    const kelvin = 273;\n\n    if (city && country) {\n      getOpenWeatherMapForecast(city, country)\n        .then((response) => response.json())\n        .then((result) => {\n          console.log(result);\n          setWeatherForcast({\n            city: result.city.name,\n            country: result.city.country,\n            date_time: result.list[0].dt_txt,\n            temperature: Math.floor(result.list[0].main.temp - kelvin),\n            temp_min: Math.floor(result.list[0].main.temp_min - kelvin),\n            temp_max: Math.floor(result.list[0].main.temp_max - kelvin),\n            feels_like: Math.floor(result.list[0].main.feels_like - kelvin),\n\n            humidity: result.list[0].main.humidity,\n            description: result.list[0].weather[0].description,\n            error: \"\",\n          });\n          setTemp4Days([\n            result.list[1].main.temp - kelvin,\n            result.list[2].main.temp - kelvin,\n            result.list[3].main.temp - kelvin,\n            result.list[4].main.temp - kelvin,\n          ]);\n          setfourDays([\n            result.list[1].dt_txt,\n            result.list[2].dt_txt,\n            result.list[3].dt_txt,\n            result.list[4].dt_txt,\n          ]);\n        });\n    } else {\n      setWeatherForcast({\n        city: \"\",\n        country: \"\",\n        date_time: \"\",\n        temperature: \"\",\n        temp_min: \"\",\n        temp_max: \"\",\n        feels_like: \"\",\n        humidity: \"\",\n        description: \"\",\n        error: \"Please enter city and country\",\n      });\n    }\n  };\n\n  return (\n    <div className={styles.app}>\n      <div className={styles.title}>\n        <Title />\n      </div>\n\n      <div\n        className={weatherForcast.temperature > 18 ? styles.warm : styles.cold}\n      >\n        <div class={styles.date_Time}>\n          <Dates />\n          <Time />\n        </div>\n        <div className={styles.locationForm}>\n          <LocationForm\n            handleCityChange={handleCityChange}\n            handleCountryChange={handleCountryChange}\n            getWeather={getWeather}\n          />\n        </div>\n\n        <main className={styles.main}>\n          <div className={styles.error}>\n            <Error error={weatherForcast.error} />\n          </div>\n          <div className={styles.location_date}>\n            <Location\n              city={weatherForcast.city}\n              country={weatherForcast.country}\n            />\n\n            {/* <Date_Time  />\n        <Time /> */}\n          </div>\n          <div className={styles.temperature}>\n            <Temperature temperature={weatherForcast.temperature} />\n          </div>\n          <div className={styles.feels_like}>\n            <Temperature\n              temp_desc=\"feels like\"\n              temperature={weatherForcast.feels_like}\n            />\n          </div>\n          <div className={styles.max_min}>\n            <div className={styles.max}>\n              <Temperature\n                temp_desc=\"Max-temp\"\n                temperature={weatherForcast.temp_max}\n              />\n            </div>\n            <Temperature\n              temp_desc=\"Min-temp\"\n              temperature={weatherForcast.temp_min}\n            />\n          </div>\n          <div className={styles.humidity}>\n            <Humidity humidity={weatherForcast.humidity} />\n          </div>\n          <div className={styles.description}>\n            <Description desc={weatherForcast.description} />\n          </div>\n          <div className={styles.temp4Days}>\n            {tempForcastNext4Days.map((temp, index) => (\n              <Temperature\n                key={index}\n                temp_desc={four}\n                temperature={Math.floor(temp)}\n              />\n            ))}\n          </div>\n        </main>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
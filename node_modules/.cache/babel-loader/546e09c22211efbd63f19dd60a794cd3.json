{"ast":null,"code":"var _jsxFileName = \"/home/ishita/weather_app_react/src/Components/Temperature.js\";\nimport React, { useState } from \"react\";\n\nfunction Temperature(props) {\n  const [temperature, setTemperature] = useState(null);\n  const [tempType, setTempType] = useState(\"celcius\");\n  useEffect(() => {\n    setTemperature(props.temperature);\n  }, [props]);\n\n  const celciusToFahrenheitAndBack = () => {\n    if (tempType === \"celcius\") {\n      setTempType(\"fahrenheit\");\n      setTemperature(temperature * 9 / 5 + 32);\n    } else {\n      setTempType(\"celcius\");\n      setTemperature(temperature);\n    }\n  };\n\n  console.log(props.temperature);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    onClick: celciusToFahrenheitAndBack,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, \"the temperature is :\", props.temperature);\n}\n\nexport default Temperature;","map":{"version":3,"sources":["/home/ishita/weather_app_react/src/Components/Temperature.js"],"names":["React","useState","Temperature","props","temperature","setTemperature","tempType","setTempType","useEffect","celciusToFahrenheitAndBack","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAC1B,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCJ,QAAQ,CAAC,IAAD,CAA9C;AACA,QAAM,CAACK,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,SAAD,CAAxC;AAEAO,EAAAA,SAAS,CAAC,MAAM;AACdH,IAAAA,cAAc,CAACF,KAAK,CAACC,WAAP,CAAd;AACD,GAFQ,EAEN,CAACD,KAAD,CAFM,CAAT;;AAIA,QAAMM,0BAA0B,GAAG,MAAM;AACvC,QAAIH,QAAQ,KAAK,SAAjB,EAA4B;AAC1BC,MAAAA,WAAW,CAAC,YAAD,CAAX;AACAF,MAAAA,cAAc,CAAED,WAAW,GAAG,CAAf,GAAoB,CAApB,GAAwB,EAAzB,CAAd;AACD,KAHD,MAGO;AACLG,MAAAA,WAAW,CAAC,SAAD,CAAX;AACAF,MAAAA,cAAc,CAACD,WAAD,CAAd;AACD;AACF,GARD;;AASAM,EAAAA,OAAO,CAACC,GAAR,CAAYR,KAAK,CAACC,WAAlB;AAEA,sBACE;AAAK,IAAA,OAAO,EAAEK,0BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BACuBN,KAAK,CAACC,WAD7B,CADF;AAKD;;AAED,eAAeF,WAAf","sourcesContent":["import React, { useState } from \"react\";\n\nfunction Temperature(props) {\n  const [temperature, setTemperature] = useState(null);\n  const [tempType, setTempType] = useState(\"celcius\");\n\n  useEffect(() => {\n    setTemperature(props.temperature);\n  }, [props]);\n\n  const celciusToFahrenheitAndBack = () => {\n    if (tempType === \"celcius\") {\n      setTempType(\"fahrenheit\");\n      setTemperature((temperature * 9) / 5 + 32);\n    } else {\n      setTempType(\"celcius\");\n      setTemperature(temperature);\n    }\n  };\n  console.log(props.temperature);\n\n  return (\n    <div onClick={celciusToFahrenheitAndBack}>\n      the temperature is :{props.temperature}\n    </div>\n  );\n}\n\nexport default Temperature;\n"]},"metadata":{},"sourceType":"module"}
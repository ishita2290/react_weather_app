{"ast":null,"code":"var _jsxFileName = \"/home/ishita/weather_app_react/src/Components/Temperature.js\";\nimport React, { useEffect, useState } from \"react\";\n\nfunction Temperature(props) {\n  const [temperature, setTemperature] = useState(null);\n  const [tempType, setTempType] = useState(\"celcius\");\n  useEffect(() => {\n    setTemperature(props.temperature);\n  }, [props]);\n\n  const celciusToFahrenheitAndBack = () => {\n    if (tempType === \"celcius\") {\n      setTempType(\"fahrenheit\");\n      setTemperature(Math.floor(temperature * 9 / 5 + 32));\n      console.log(tempType);\n    } else {\n      setTempType(\"celcius\");\n      setTemperature(Math.floor((temperature - 32) * 5 / 9));\n      console.log(tempType);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    onClick: celciusToFahrenheitAndBack,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, props.temperature && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, \"the temperature is :\", temperature, \",\", tempType));\n}\n\nexport default Temperature;","map":{"version":3,"sources":["/home/ishita/weather_app_react/src/Components/Temperature.js"],"names":["React","useEffect","useState","Temperature","props","temperature","setTemperature","tempType","setTempType","celciusToFahrenheitAndBack","Math","floor","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAC1B,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCJ,QAAQ,CAAC,IAAD,CAA9C;AACA,QAAM,CAACK,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,SAAD,CAAxC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,cAAc,CAACF,KAAK,CAACC,WAAP,CAAd;AACD,GAFQ,EAEN,CAACD,KAAD,CAFM,CAAT;;AAIA,QAAMK,0BAA0B,GAAG,MAAM;AACvC,QAAIF,QAAQ,KAAK,SAAjB,EAA4B;AAC1BC,MAAAA,WAAW,CAAC,YAAD,CAAX;AACAF,MAAAA,cAAc,CAACI,IAAI,CAACC,KAAL,CAAYN,WAAW,GAAG,CAAd,GAAgB,CAAjB,GAAsB,EAAjC,CAAD,CAAd;AAEAO,MAAAA,OAAO,CAACC,GAAR,CAAYN,QAAZ;AACD,KALD,MAKO;AACLC,MAAAA,WAAW,CAAC,SAAD,CAAX;AACAF,MAAAA,cAAc,CAACI,IAAI,CAACC,KAAL,CAAW,CAACN,WAAW,GAAE,EAAd,IAAoB,CAApB,GAAsB,CAAjC,CAAD,CAAd;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAYN,QAAZ;AACD;AACF,GAXD;;AAcA,sBACE;AAAK,IAAA,OAAO,EAAEE,0BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4CL,KAAK,CAACC,WAAN,iBAC1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAwBA,WAAxB,OAAsCE,QAAtC,CADF,CADF;AAKD;;AAED,eAAeJ,WAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nfunction Temperature(props) {\n  const [temperature, setTemperature] = useState(null);\n  const [tempType, setTempType] = useState(\"celcius\");\n\n  useEffect(() => {\n    setTemperature(props.temperature);\n  }, [props]);\n\n  const celciusToFahrenheitAndBack = () => {\n    if (tempType === \"celcius\") {\n      setTempType(\"fahrenheit\");\n      setTemperature(Math.floor((temperature * 9/5) + 32));\n      \n      console.log(tempType);\n    } else {\n      setTempType(\"celcius\");\n      setTemperature(Math.floor((temperature -32) * 5/9));\n      console.log(tempType);\n    }\n  };\n\n\n  return (\n    <div onClick={celciusToFahrenheitAndBack}>{ props.temperature &&\n      <p>the temperature is :{temperature},{tempType}</p>}\n    </div>\n  );\n}\n\nexport default Temperature;\n"]},"metadata":{},"sourceType":"module"}